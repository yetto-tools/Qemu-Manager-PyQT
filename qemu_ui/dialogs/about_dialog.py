# qemu_ui/dialogs/about_dialog.py
"""
Di√°logo de informaci√≥n sobre la aplicaci√≥n QEMU Manager

UBICACI√ìN: qemu_ui/dialogs/about_dialog.py
PROP√ìSITO: Mostrar informaci√≥n de la aplicaci√≥n
"""

from PyQt5.QtWidgets import (
    QDialog, QVBoxLayout, QPushButton, QLabel, QTextEdit, QTabWidget, QWidget
)
from PyQt5.QtGui import QFont, QPixmap
from PyQt5.QtCore import Qt
import config


class AboutDialog(QDialog):
    """
    Di√°logo que muestra informaci√≥n sobre QEMU Manager
    
    Caracter√≠sticas:
    - Informaci√≥n de la aplicaci√≥n
    - Caracter√≠sticas principales
    - Requisitos del sistema
    - Informaci√≥n de licencia
    - Cr√©ditos
    """
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("Acerca de QEMU Manager")
        self.setGeometry(200, 200, 700, 600)
        self.setMinimumWidth(700)
        self.setMinimumHeight(600)
        
        self.init_ui()
    
    def init_ui(self):
        """Inicializa la interfaz del di√°logo"""
        
        main_layout = QVBoxLayout()
        main_layout.setSpacing(15)
        main_layout.setContentsMargins(20, 20, 20, 20)
        
        # ==================== SECCI√ìN DE T√çTULO ====================
        title_layout = self.create_title_section()
        main_layout.addLayout(title_layout)
        
        # ==================== SEPARADOR ====================
        separator = QLabel("-" * 50)
        main_layout.addWidget(separator)
        
        # ==================== PESTA√ëAS ====================
        self.tabs = QTabWidget()
        
        # Pesta√±a Informaci√≥n
        info_tab = self.create_info_tab()
        self.tabs.addTab(info_tab, "üìã Informaci√≥n")
        
        # Pesta√±a Caracter√≠sticas
        features_tab = self.create_features_tab()
        self.tabs.addTab(features_tab, "‚ú® Caracter√≠sticas")
        
        # Pesta√±a Requisitos
        requirements_tab = self.create_requirements_tab()
        self.tabs.addTab(requirements_tab, "‚öôÔ∏è Requisitos")
        
        # Pesta√±a Licencia
        license_tab = self.create_license_tab()
        self.tabs.addTab(license_tab, "üìú Licencia")
        
        # Pesta√±a Cr√©ditos
        credits_tab = self.create_credits_tab()
        self.tabs.addTab(credits_tab, "üë• Cr√©ditos")
        
        main_layout.addWidget(self.tabs)
        
        # ==================== BOTONES ====================
        button_layout = self.create_button_section()
        main_layout.addLayout(button_layout)
        
        self.setLayout(main_layout)
    
    def create_title_section(self):
        """Crea la secci√≥n de t√≠tulo con informaci√≥n general"""
        from PyQt5.QtWidgets import QHBoxLayout
        
        layout = QHBoxLayout()
        
        # T√≠tulo principal
        title = QLabel("QEMU Manager Pro")
        title_font = QFont()
        title_font.setPointSize(20)
        title_font.setBold(True)
        title.setFont(title_font)
        layout.addWidget(title)
        
        layout.addStretch()
        
        # Versi√≥n
        version_widget = QWidget()
        version_layout = QVBoxLayout()
        
        version_label = QLabel(f"Versi√≥n {config.APP_VERSION}")
        version_font = QFont()
        version_font.setPointSize(12)
        version_font.setBold(True)
        version_label.setFont(version_font)
        version_layout.addWidget(version_label)
        
        subtitle = QLabel("Gestor de M√°quinas Virtuales QEMU")
        subtitle_font = QFont()
        subtitle_font.setPointSize(10)
        subtitle_font.setItalic(True)
        subtitle.setFont(subtitle_font)
        subtitle.setStyleSheet("color: gray;")
        version_layout.addWidget(subtitle)
        
        version_widget.setLayout(version_layout)
        layout.addWidget(version_widget)
        
        return layout
    
    def create_info_tab(self):
        """Crea la pesta√±a de informaci√≥n general"""
        widget = QWidget()
        layout = QVBoxLayout()
        
        info_text = f"""
        <h3>QEMU Manager Pro</h3>
        
        <p><b>Versi√≥n:</b> {config.APP_VERSION}</p>
        <p><b>Autor:</b> {config.APP_AUTHOR}</p>
        <p><b>Descripci√≥n:</b> {config.APP_DESCRIPTION}</p>
        
        <h4>Acerca de:</h4>
        <p>QEMU Manager es una aplicaci√≥n gr√°fica completa para gestionar m√°quinas virtuales 
        QEMU en Linux, macOS y WSL. Proporciona una interfaz intuitiva para crear, configurar, 
        iniciar y detener m√°quinas virtuales sin necesidad de usar la l√≠nea de comandos.</p>
        
        <p>La aplicaci√≥n implementa <b>Arquitectura Hexagonal (Puertos y Adaptadores)</b>, 
        lo que garantiza:</p>
        <ul>
            <li>C√≥digo limpio y mantenible</li>
            <li>F√°cil de probar (testeable)</li>
            <li>Independencia de frameworks</li>
            <li>Reutilizable en m√∫ltiples interfaces</li>
        </ul>
        
        <h4>Caracter√≠sticas Principales:</h4>
        <ul>
            <li>‚úì Crear y gestionar m√°quinas virtuales</li>
            <li>‚úì Detecci√≥n autom√°tica de VMs existentes</li>
            <li>‚úì Administrador completo de discos virtuales</li>
            <li>‚úì Crear y convertir formatos de disco</li>
            <li>‚úì Configuraci√≥n avanzada de hardware</li>
            <li>‚úì Administrador de redes</li>
            <li>‚úì Configuraci√≥n de video</li>
            <li>‚úì Administrador de perif√©ricos</li>
            <li>‚úì B√∫squeda de discos e im√°genes ISO</li>
            <li>‚úì Importaci√≥n y exportaci√≥n de configuraciones</li>
        </ul>
        """
        
        text_edit = QTextEdit()
        text_edit.setHtml(info_text)
        text_edit.setReadOnly(True)
        layout.addWidget(text_edit)
        
        widget.setLayout(layout)
        return widget
    
    def create_features_tab(self):
        """Crea la pesta√±a de caracter√≠sticas"""
        widget = QWidget()
        layout = QVBoxLayout()
        
        features_text = """
        <h3>Caracter√≠sticas de QEMU Manager</h3>
        
        <h4>üñ•Ô∏è Gesti√≥n de M√°quinas Virtuales</h4>
        <ul>
            <li>Crear nuevas m√°quinas virtuales</li>
            <li>Configurar CPU, RAM, disco y otros par√°metros</li>
            <li>Iniciar, pausar y detener VMs</li>
            <li>Eliminar VMs existentes</li>
            <li>Detecci√≥n autom√°tica de VMs en el sistema</li>
        </ul>
        
        <h4>üíæ Administrador de Discos</h4>
        <ul>
            <li>Crear nuevos discos virtuales</li>
            <li>Soporta m√∫ltiples formatos: QCOW2, RAW, VDI, VMDK</li>
            <li>Convertir entre formatos</li>
            <li>Gestionar discos existentes</li>
            <li>Preconfiguraci√≥n de tama√±os est√°ndar</li>
        </ul>
        
        <h4>üåê Configuraci√≥n de Red</h4>
        <ul>
            <li>Tipos de red: user, bridge, tap, vde</li>
            <li>Configuraci√≥n de interfaces</li>
            <li>Soporte para DHCP e IPv6</li>
            <li>VLAN y MTU personalizados</li>
        </ul>
        
        <h4>üé¨ Configuraci√≥n de Video</h4>
        <ul>
            <li>Tipos de tarjetas gr√°ficas: QXL, Virtio, VMware, VGA</li>
            <li>M√∫ltiples resoluciones disponibles</li>
            <li>Configuraci√≥n de profundidad de color</li>
            <li>Aceleraci√≥n OpenGL y Virgl</li>
            <li>Soporte para m√∫ltiples monitores</li>
        </ul>
        
        <h4>üîå Administrador de Perif√©ricos</h4>
        <ul>
            <li>Configuraci√≥n de puertos USB</li>
            <li>Configuraci√≥n de audio</li>
            <li>Dispositivos de entrada (rat√≥n, teclado)</li>
            <li>Puertos seriales</li>
            <li>Otros perif√©ricos (paralelo, watchdog, etc)</li>
        </ul>
        
        <h4>üîç B√∫squeda y Descubrimiento</h4>
        <ul>
            <li>Buscar discos en el sistema de archivos</li>
            <li>Escanear directorios recursivamente</li>
            <li>Importar VMs existentes</li>
            <li>Filtrar por tipo de archivo</li>
        </ul>
        """
        
        text_edit = QTextEdit()
        text_edit.setHtml(features_text)
        text_edit.setReadOnly(True)
        layout.addWidget(text_edit)
        
        widget.setLayout(layout)
        return widget
    
    def create_requirements_tab(self):
        """Crea la pesta√±a de requisitos del sistema"""
        widget = QWidget()
        layout = QVBoxLayout()
        
        requirements_text = f"""
        <h3>Requisitos del Sistema</h3>
        
        <h4>Requisitos M√≠nimos:</h4>
        <ul>
            <li><b>Python:</b> 3.8 o superior</li>
            <li><b>QEMU:</b> 4.2 o superior</li>
            <li><b>RAM:</b> 2 GB m√≠nimo</li>
            <li><b>Espacio en disco:</b> 500 MB para la aplicaci√≥n</li>
            <li><b>SO:</b> Linux, macOS o WSL (Windows Subsystem for Linux)</li>
        </ul>
        
        <h4>Requisitos Recomendados:</h4>
        <ul>
            <li><b>Python:</b> 3.10 o superior</li>
            <li><b>QEMU:</b> 6.0 o superior</li>
            <li><b>RAM:</b> 4 GB o m√°s</li>
            <li><b>Procesador:</b> Intel VT-x o AMD-V (para KVM)</li>
            <li><b>SO:</b> Linux de 64 bits</li>
        </ul>
        
        <h4>Dependencias Python:</h4>
        <ul>
            <li><b>PyQt5:</b> 5.15+</li>
            <li><b>psutil:</b> Para monitoreo del sistema</li>
        </ul>
        
        <h4>Dependencias del Sistema:</h4>
        <ul>
            <li><b>qemu-system-x86_64:</b> Para m√°quinas de 64 bits</li>
            <li><b>qemu-img:</b> Para gesti√≥n de im√°genes de disco</li>
            <li><b>KVM (opcional):</b> Para aceleraci√≥n por hardware</li>
        </ul>
        
        <h4>Instalaci√≥n de Dependencias:</h4>
        <p><b>En Ubuntu/Debian:</b></p>
        <pre>sudo apt update
sudo apt install qemu-system-x86 qemu-utils python3-pyqt5
pip install psutil</pre>
        
        <p><b>En Fedora/RHEL:</b></p>
        <pre>sudo dnf install qemu-system-x86 qemu-img python3-pyqt5
pip install psutil</pre>
        
        <p><b>En macOS:</b></p>
        <pre>brew install qemu pyqt5
pip install psutil</pre>
        """
        
        text_edit = QTextEdit()
        text_edit.setHtml(requirements_text)
        text_edit.setReadOnly(True)
        layout.addWidget(text_edit)
        
        widget.setLayout(layout)
        return widget
    
    def create_license_tab(self):
        """Crea la pesta√±a de licencia"""
        widget = QWidget()
        layout = QVBoxLayout()
        
        license_text = """
        <h3>Licencia GPL v3</h3>
        
        <p>QEMU Manager est√° licenciado bajo la GNU General Public License v3.0</p>
        
        <h4>Derechos de Uso:</h4>
        <ul>
            <li><b>‚úì Libertad:</b> Usar el software con cualquier prop√≥sito</li>
            <li><b>‚úì Estudio:</b> Examinar y estudiar el c√≥digo fuente</li>
            <li><b>‚úì Modificaci√≥n:</b> Modificar el c√≥digo para tus necesidades</li>
            <li><b>‚úì Distribuci√≥n:</b> Compartir mejoras con la comunidad</li>
        </ul>
        
        <h4>Obligaciones:</h4>
        <ul>
            <li><b>‚ö†Ô∏è Atribuci√≥n:</b> Reconocer a los autores originales</li>
            <li><b>‚ö†Ô∏è Copyleft:</b> Las modificaciones deben mantenerse bajo GPL</li>
            <li><b>‚ö†Ô∏è Licencia:</b> Incluir copia de la licencia</li>
            <li><b>‚ö†Ô∏è Cambios:</b> Documentar los cambios realizados</li>
        </ul>
        
        <h4>Descargo de Responsabilidad:</h4>
        <p>Este software se proporciona "TAL COMO EST√Å", sin garant√≠a de ning√∫n tipo, 
        expl√≠cita o impl√≠cita, incluyendo pero no limitado a garant√≠as de comerciabilidad, 
        aptitud para un prop√≥sito particular y no infracci√≥n.</p>
        
        <p>Los autores no ser√°n responsables de ning√∫n da√±o directo, indirecto, incidental, 
        especial, ejemplar o consecuente (incluyendo pero no limitado a, la adquisici√≥n de 
        bienes o servicios sustitutos; p√©rdida de uso, datos o ganancias; o interrupci√≥n del 
        negocio) causado por cualquier teor√≠a de responsabilidad, ya sea por contrato, 
        responsabilidad objetiva o agravio (incluyendo negligencia o de otro modo).</p>
        
        <h4>Licencia Completa:</h4>
        <p>Para leer la licencia completa, visite: 
        <a href="https://www.gnu.org/licenses/gpl-3.0.html">https://www.gnu.org/licenses/gpl-3.0.html</a></p>
        """
        
        text_edit = QTextEdit()
        text_edit.setHtml(license_text)
        text_edit.setReadOnly(True)
        layout.addWidget(text_edit)
        
        widget.setLayout(layout)
        return widget
    
    def create_credits_tab(self):
        """Crea la pesta√±a de cr√©ditos"""
        widget = QWidget()
        layout = QVBoxLayout()
        
        credits_text = """
        <h3>Cr√©ditos</h3>
        
        <h4>Desarrollo:</h4>
        <ul>
            <li><b>QEMU Manager Team</b> - Desarrollo principal</li>
            <li>Arquitectura Hexagonal implementada</li>
            <li>Interfaz PyQt5</li>
        </ul>
        
        <h4>Tecnolog√≠as Utilizadas:</h4>
        <ul>
            <li><b>QEMU:</b> Emulador y virtualizador (https://www.qemu.org)</li>
            <li><b>PyQt5:</b> Framework GUI para Python (https://www.riverbankcomputing.com/software/pyqt)</li>
            <li><b>Python:</b> Lenguaje de programaci√≥n (https://www.python.org)</li>
            <li><b>psutil:</b> Librer√≠a para monitoreo del sistema</li>
        </ul>
        
        <h4>Patrones y Arquitectura:</h4>
        <ul>
            <li><b>Arquitectura Hexagonal:</b> Puertos y Adaptadores</li>
            <li><b>Patr√≥n Repository:</b> Para abstracci√≥n de datos</li>
            <li><b>Patr√≥n UseCase:</b> Para l√≥gica de negocio</li>
            <li><b>Patr√≥n Presenter:</b> Para separaci√≥n de presentaci√≥n</li>
            <li><b>Inyecci√≥n de Dependencias:</b> Para desacoplamiento</li>
            <li><b>Observer Pattern:</b> Para notificaciones</li>
        </ul>
        
        <h4>Herramientas de Desarrollo:</h4>
        <ul>
            <li><b>Git:</b> Control de versiones</li>
            <li><b>GitHub:</b> Repositorio del c√≥digo</li>
            <li><b>pytest:</b> Framework de testing</li>
        </ul>
        
        <h4>Comunidad:</h4>
        <p>Agradecemos a la comunidad de QEMU y Python por sus valiosas 
        contribuciones, reportes de bugs y sugerencias de mejora.</p>
        
        <h4>Contribuciones:</h4>
        <p>¬øQuieres contribuir? Puedes:</p>
        <ul>
            <li>Reportar bugs en GitHub Issues</li>
            <li>Sugerir nuevas caracter√≠sticas</li>
            <li>Enviar pull requests con mejoras</li>
            <li>Ayudar con la documentaci√≥n</li>
            <li>Traducir a otros idiomas</li>
        </ul>
        
        <h4>Contacto y Recursos:</h4>
        <ul>
            <li><b>Repositorio:</b> https://github.com/usuario/qemu-manager</li>
            <li><b>Documentaci√≥n:</b> Wiki del proyecto</li>
            <li><b>Issues:</b> GitHub Issues</li>
            <li><b>Discusiones:</b> GitHub Discussions</li>
        </ul>
        
        <p style="margin-top: 30px; color: gray; font-size: 10pt;">
        Hecho con ‚ù§Ô∏è para la comunidad de virtualizaci√≥n
        </p>
        """
        
        text_edit = QTextEdit()
        text_edit.setHtml(credits_text)
        text_edit.setReadOnly(True)
        layout.addWidget(text_edit)
        
        widget.setLayout(layout)
        return widget
    
    def create_button_section(self):
        """Crea la secci√≥n de botones"""
        from PyQt5.QtWidgets import QHBoxLayout
        
        layout = QHBoxLayout()
        layout.addStretch()
        
        # Bot√≥n Cerrar
        close_btn = QPushButton("Cerrar")
        close_btn.setFixedWidth(100)
        close_btn.clicked.connect(self.close)
        layout.addWidget(close_btn)
        
        return layout